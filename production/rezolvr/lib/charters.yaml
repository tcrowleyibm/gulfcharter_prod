name: charters
type: resource.web.app
description: A collection of charters associated with boat tours
provides:
  - type: service.web.app
    name: chartersms
    description: A microservice to manage boat charter details
    params:
      - name: dbtime_endpoint
        value: /dbtime
      - name: charters_endpoint
        value: /charters
      - name: port
        formula: '{{with(index .Needs "environment.properties:appEnvProps")}}{{.Params.charters_port.Value}}{{end}}'
      - name: imageName
        formula: '{{with(index .Needs "service.container.registry:imageRegistry")}}{{.Params.endpoint.Value}}{{end}}{{.Component.Name}}'
      - name: image.tag
        value: 'latest'
uses:
  - type: environment
    name: default
    params:
      - name: DB_PORT
        formula: '{{with(index .Needs "service.db.postgres:chartersdb")}}{{.Params.db_port.Value}}{{end}}'
      - name: DB_NAME
        formula: '{{with(index .Needs "service.db.postgres:chartersdb")}}{{.Params.db_name.Value}}{{end}}'
      - name: DB_HOST
        formula: '{{with(index .Needs "service.db.postgres:chartersdb")}}{{.Params.db_host.Value}}{{end}}'
      - name: MY_PORT
        formula: '{{with(index .Needs "environment.properties:appEnvProps")}}{{.Params.charters_port.Value}}{{end}}'
  - type: secret
    name: databasecredentials
    params:
      - name: DB_USER
        formula: '{{with(index .Needs "environment.secret:databasecredentials")}}{{.Params.db_username.Value}}{{end}}'
      - name: DB_PW
        formula: '{{with(index .Needs "environment.secret:databasecredentials")}}{{.Params.db_password.Value}}{{end}}'
      
needs:
  - type: service.db.postgres
    name: chartersdb
    description: Back-end database
    params:
      - name: db_port
        required: true
      - name: db_name
        required: true
      - name: db_host
        required: true
  - type: environment.properties
    name: appEnvProps
    description: Application properties
    params:
      - name: app_message
        required: true
      - name: charters_port
        required: true
  - type: service.container.registry
    name: imageRegistry
    params:
      - name: endpoint
        required: true
  - type: environment.secret
    name: databasecredentials
    description: Credentials for accessing the database
    params:
      - name: db_username
        required: true
      - name: db_password
        required: true
